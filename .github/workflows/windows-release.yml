name: Windows release build

#
on: workflow_dispatch

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo
  REPO_DIR : ${{github.workspace}}
  BUILD_DIR: ${{github.workspace}}/bin/builddir
  BOOST_TOOLSET: "msvc"
  BOOST_VERSION: "1.79.0.beta1"
  BOOST_INSTALL_DIR: "${{github.workspace}}/bin"

jobs:
  build:
    runs-on: windows-2022
    permissions:
      contents: read

    strategy:
      matrix:
       include:
          - OPTIONAL_DEFINES: ""
            TYPE: "default"
            
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{env.REPO_DIR}}

      - uses: FranzDiebold/github-env-vars-action@v2
      - name: Create Build Environment
        run: |
          echo "ARCHIVE_FILENAME=$env:CI_REPOSITORY_NAME-${{matrix.TYPE}}-$env:CI_SHA_SHORT.zip" >> $env:GITHUB_ENV
          cmake -E make_directory ${{ env.BUILD_DIR }}

      # install dependencies
      - name: Cache Windows boost
        uses: actions/cache@v2
        id: cache-boost
        with:
          path: "${{env.BOOST_INSTALL_DIR}}/boost"
          key: ${{ runner.os }}-${{ hashFiles('.github/workflows/windows-release.yml') }}

      - if: steps.cache-boost.outputs.cache-hit != 'true'
        name: Install boost
        uses: MarkusJx/install-boost@v2.3.0
        id: install-boost
        with:
          # REQUIRED: Specify the required boost version
          # A list of supported versions can be found here:
          # https://github.com/actions/boost-versions/blob/main/versions-manifest.json
          boost_version: ${{env.BOOST_VERSION}}
          # OPTIONAL: Specify a toolset on windows
          toolset: ${{env.BOOST_TOOLSET}}
          # OPTIONAL: Specify a custon install location
          boost_install_dir: ${{env.BOOST_INSTALL_DIR}}
          platform_version: 2022
          # NOTE: If a boost version matching all requirements cannot be found,
          # this build step will fail

      - name: Configure
        env:
          BOOST_ROOT: "${{env.BOOST_INSTALL_DIR}}/boost/boost"
        run: cmake ${{matrix.OPTIONAL_DEFINES}} -B ${{env.BUILD_DIR}} -S ${{env.REPO_DIR}}

      - name: Build
        env:
          MAKEFLAGS: "-j8"
        run: cmake --build ${{env.BUILD_DIR}} --config ${{env.BUILD_TYPE}}

      - name: Archive files
        run: |
          cd bin
          7z a -tzip ${{env.ARCHIVE_FILENAME}} "x64_${{env.BUILD_TYPE}}"
      - name: Archive this artefact
        uses: actions/upload-artifact@v2
        with:
          name: snapshot-${{matrix.TYPE}}
          path: "bin/${{env.ARCHIVE_FILENAME}}"

  upload:
    runs-on: windows-2022
    permissions:
      contents: write  # for marvinpinto/action-automatic-releases to generate pre-release
    needs: build

    steps:
      - name: Download artifact snapshot-default
        uses: actions/download-artifact@v1
        with:
          name: snapshot-default
          path: all_snapshots
      - name: Download artifact snapshot-with-all
        uses: actions/download-artifact@v1
        with:
          name: snapshot-with-all
          path: all_snapshots
      - name: Download artifact snapshot-with-playerbot-ahbot
        uses: actions/download-artifact@v1
        with:
          name: snapshot-with-playerbot-ahbot
          path: all_snapshots
      - name: Download artifact snapshot-with-playerbot
        uses: actions/download-artifact@v1
        with:
          name: snapshot-with-playerbot
          path: all_snapshots
      - name: Download artifact snapshot-with-ahbot
        uses: actions/download-artifact@v1
        with:
          name: snapshot-with-ahbot
          path: all_snapshots

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: Upload snapshot
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: false
          title: "Development Build(${{ steps.date.outputs.date }})"
          files: all_snapshots
